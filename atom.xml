<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://likasi777.github.io/</id>
    <title>likasi777_blog</title>
    <updated>2021-07-13T13:51:25.241Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://likasi777.github.io/"/>
    <link rel="self" href="https://likasi777.github.io/atom.xml"/>
    <logo>https://likasi777.github.io/images/avatar.png</logo>
    <icon>https://likasi777.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, likasi777_blog</rights>
    <entry>
        <title type="html"><![CDATA[github+gridea搭建个人博客]]></title>
        <id>https://likasi777.github.io/post/githubgridea-da-jian-ge-ren-bo-ke/</id>
        <link href="https://likasi777.github.io/post/githubgridea-da-jian-ge-ren-bo-ke/">
        </link>
        <updated>2021-07-13T13:34:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="githubgridea搭建个人博客">github+gridea搭建个人博客</h1>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/likasi/img/raw/master/img/gridea.png" alt="" loading="lazy"></figure>
<h2 id="简介">简介</h2>
<p>用github、gridea搭建个人博客，以及用gitee、picgo搭建图床。</p>
<h2 id="搭建个人博客">搭建个人博客</h2>
<h3 id="github">GitHub</h3>
<p>1.创建GitHub账号，https://githu.com 每个GitHub账号有一个免费的GitHub pages。</p>
<p>2.创建仓库，仓库名称为固定格式：xxx.github.io</p>
<p>3.创建完仓库，点击设置，找到GitHub pages ，找到Your site is published at https://xxx.github.io</p>
<p>4.创建token，在设置里面找到个人设置，再找到开发者设置，找到最后的personal access tokens——&gt;generate new token ——&gt;填写note——&gt;勾选repo——&gt;generate token，复制这个token待会gridea里面用到。</p>
<h3 id="gridea">Gridea</h3>
<p>1.下载安装：https://gridea.dev ，如果没有看到默认的两篇文章，重新安装。</p>
<p>2.配置相关信息：找到远程，选择GitHub pages</p>
<ul>
<li>
<p>域名：xxx.github.io/</p>
</li>
<li>
<p>仓库名称：xxx.github.io</p>
</li>
<li>
<p>分支：main</p>
</li>
<li>
<p>仓库用户名：xxx</p>
</li>
<li>
<p>邮箱：注册github的邮箱</p>
</li>
<li>
<p>令牌：刚刚github创建token时保存的token</p>
</li>
<li>
<p>CNAME：可填可不填</p>
</li>
<li>
<p>先点击保存，再点击检测远程连接，可以先点预览在本地看看，然后点击同步（如果同步失败的话，翻下墙再同步就好了）。</p>
</li>
</ul>
<p>3.其他配置：点击主题可以修改主题、网站名称、网页图标、头像配置等等的。</p>
<h3 id="gitalk">Gitalk</h3>
<p>1.开启gitalk评论系统，在https://github.com/settings/applications/new注册应用。</p>
<ol start="2">
<li></li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">Application name</th>
<th style="text-align:left">Gridea_gitalk（自定义）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Homepage URL</td>
<td style="text-align:left">https://cyberlisa.github.io/</td>
</tr>
<tr>
<td style="text-align:left">Application description</td>
<td style="text-align:left">可不填</td>
</tr>
<tr>
<td style="text-align:left">Authorization callback URL</td>
<td style="text-align:left">https://cyberlisa.github.io/</td>
</tr>
</tbody>
</table>
<p>填写后点击【Register application】，会得到【Client ID】和【Client Secret】。</p>
<p>打开Gridea客户端——&gt;配置——&gt;评论配置——&gt;Platform（选中Gitalk）——&gt;开启按钮——&gt;</p>
<table>
<thead>
<tr>
<th style="text-align:left">Client ID</th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Client Secret</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">仓库</td>
<td style="text-align:left">Cyberlisa.github.io</td>
</tr>
<tr>
<td style="text-align:left">Owner</td>
<td style="text-align:left">Cyberlisa</td>
</tr>
</tbody>
</table>
<p>填完后点击【保存】——&gt;【同步】。</p>
<p>稍等一会儿后，在浏览器打开域名，会看到文章底下显示“未找到相关的issues进行评论xxx”，点击【使用GitHub登陆】，进行授权。</p>
<h2 id="搭建图床">搭建图床</h2>
<h2 id="gitee">gitee</h2>
<p>1.注册gitee账号，https://gitee.com</p>
<p>2.创建仓库。</p>
<p>3.创建token，复制下来。</p>
<h2 id="picgo">picgo</h2>
<p>1.下载picgo，github下载慢的话，可以去网上找别人分享的（注意不要下到捆绑软件）。</p>
<p>2.安装node.js，网上有很多教程https://www.runoob.com/nodejs/nodejs-install-setup.html</p>
<p>3.打开picgo,  在插件设置中搜索gitee， 选择gitee-uploder安装。</p>
<p>4.安装插件后再图床设置中找到gitee， 填写gitee设置</p>
<ul>
<li>repo：gitee的用户名/仓库名</li>
<li>branch：master</li>
<li>token：刚刚gitee创建的token</li>
<li>path：仓库下的文件夹</li>
<li>如果没有的话会自动创建</li>
<li>custormPath：随便选</li>
<li>custormUrl：可填可不填</li>
</ul>
<p>5.点击确定，会提示成功，然后在上传区点击上传图片，然后去gitee看看有没有成功。</p>
<p>6.其他设置：打开picgo设置，可选择显示的图床，把不用的取消打钩，以及修改上传快捷键。</p>
]]></content>
    </entry>
</feed>